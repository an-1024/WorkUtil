<mxfile host="app.diagrams.net" modified="2022-08-30T17:08:41.583Z" agent="5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36" etag="MKgGlK4u6t2JB2SFlgbO" version="20.2.5" type="github">
  <diagram id="C5RBs43oDa-KdzZeNtuy" name="Page-1">
    <mxGraphModel dx="23035" dy="3751" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-1" parent="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="-McDBByZdcgpEU9wJOO_-78" value="" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Verdana;fontSize=18;fontColor=#00CCCC;strokeColor=#00CCCC;fillColor=#00CCCC;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-613" y="-1300" width="960" height="750" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-72" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontFamily=Verdana;fontSize=18;fontColor=#FF0000;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="vhB5iVHmFAJZdGOzhbKn-0" target="vhB5iVHmFAJZdGOzhbKn-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="vhB5iVHmFAJZdGOzhbKn-0" value="&lt;font style=&quot;font-size: 25px;&quot;&gt;Spring IOC 细节-&amp;gt; XML的bean加载&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-363" y="-1239" width="420" height="70" as="geometry" />
        </mxCell>
        <mxCell id="vhB5iVHmFAJZdGOzhbKn-9" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=18;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="vhB5iVHmFAJZdGOzhbKn-5" target="vhB5iVHmFAJZdGOzhbKn-8" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="vhB5iVHmFAJZdGOzhbKn-5" value="ClassPathXmlApplicationContext(&quot;classpath:spring-config.xml&quot;)&lt;br style=&quot;font-size: 25px;&quot;&gt;指定加载文件位置" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-527.5" y="-1120" width="749" height="90" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-13" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="vhB5iVHmFAJZdGOzhbKn-8" target="-McDBByZdcgpEU9wJOO_-0" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="vhB5iVHmFAJZdGOzhbKn-8" value="super(parent); 父级的层层调用，初始化 Spring Factory的属性值" style="whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-538.75" y="-980" width="771.5" height="80" as="geometry" />
        </mxCell>
        <mxCell id="vhB5iVHmFAJZdGOzhbKn-13" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=18;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="vhB5iVHmFAJZdGOzhbKn-10" target="vhB5iVHmFAJZdGOzhbKn-12" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="vhB5iVHmFAJZdGOzhbKn-17" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=18;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="vhB5iVHmFAJZdGOzhbKn-10" target="vhB5iVHmFAJZdGOzhbKn-12" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="vhB5iVHmFAJZdGOzhbKn-10" value="&lt;font color=&quot;#ff3333&quot;&gt;&lt;b&gt;AbstractXmlApplicationContext&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;b style=&quot;color: rgb(255, 51, 51); font-size: 25px;&quot;&gt;validating = true // XML 文档是否需要校验&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b style=&quot;&quot;&gt;super(parent)&lt;/b&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;rounded=0;align=left;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="460" y="-1032.5" width="490" height="215" as="geometry" />
        </mxCell>
        <mxCell id="vhB5iVHmFAJZdGOzhbKn-16" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=18;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="vhB5iVHmFAJZdGOzhbKn-12" target="vhB5iVHmFAJZdGOzhbKn-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="vhB5iVHmFAJZdGOzhbKn-12" value="&lt;b&gt;&lt;span style=&quot;color: rgb(255, 51, 51); background-color: initial;&quot;&gt;AbstractRefreshableConfigApplicationContext&lt;/span&gt;&lt;br&gt;&lt;/b&gt;&lt;ol style=&quot;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff3333&quot; style=&quot;font-size: 25px;&quot;&gt;&lt;b style=&quot;font-size: 25px;&quot;&gt;String[] configLocations 配置文件路径&lt;/b&gt;&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;setIdCalled = false 是否重新设置 bean 名称 ：fasle表示可以， true 表示不能自定义&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;super(parent)&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;rounded=0;align=left;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="1100" y="-1023.12" width="1030" height="196.25" as="geometry" />
        </mxCell>
        <mxCell id="vhB5iVHmFAJZdGOzhbKn-19" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=18;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="vhB5iVHmFAJZdGOzhbKn-15" target="vhB5iVHmFAJZdGOzhbKn-18" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="vhB5iVHmFAJZdGOzhbKn-15" value="&lt;span style=&quot;background-color: initial;&quot;&gt;AbstractRefreshableApplicationContext&lt;/span&gt;&lt;br&gt;&lt;ol style=&quot;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;Boolean allowBeanDefinitionOverriding是否允许 beanDefinition 定义被覆盖&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;Boolean allowCircularReferences 允许循环引用&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;DefaultListableBeanFactory beanFactory ：beanFactory 工厂定义&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;super(parent)&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;rounded=0;align=left;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="2250" y="-1049.99" width="940" height="250" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-4" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#CC00CC;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="vhB5iVHmFAJZdGOzhbKn-18" target="t0Rb5IohVzh9Mymz01Zp-3">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-6" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#CC00CC;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="vhB5iVHmFAJZdGOzhbKn-18" target="t0Rb5IohVzh9Mymz01Zp-5">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="vhB5iVHmFAJZdGOzhbKn-18" value="&lt;br&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;AbstractApplicationContext&lt;/b&gt;&lt;br&gt;&lt;ol style=&quot;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;String MESSAGE_SOURCE_BEAN_NAME = &quot;messageSource&quot; 消息解析器， 未指定加载父类的消息解析器&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;String LIFECYCLE_PROCESSOR_BEAN_NAME = &quot;lifecycleProcessor&quot; 生命周期处理器，为提供默认使用DefaultLifecycleProcessor&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;String APPLICATION_EVENT_MULTICASTER_BEAN_NAME = &quot;applicationEventMulticaster&quot; 应用事件广播，未指定默认使用SimpleApplicationEventMulticaster&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;String id = ObjectUtils.identityToString(this) 应用id 赋值&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;String displayName = ObjectUtils.identityToString(this) 显示名称赋值&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;ApplicationContext parent 父类上下文&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff3333&quot; style=&quot;font-size: 25px;&quot;&gt;&lt;b style=&quot;font-size: 25px;&quot;&gt;ConfigurableEnvironment environment 应用执行环境&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;final List&amp;lt;BeanFactoryPostProcessor&amp;gt; beanFactoryPostProcessors = new ArrayList&amp;lt;&amp;gt;() 实例化前置处理器集合&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;long startupDate 应用开始启动时间&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;final AtomicBoolean active = new AtomicBoolean() 应用是否正在运行&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;final AtomicBoolean closed = new AtomicBoolean() 应用是否已经关闭&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;final Object startupShutdownMonitor = new Object() 刷新和销毁的同步监视器&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;Thread shutdownHook&amp;nbsp; 如果已经注册JVM钩子函数，那么该变量就是JVM 钩子函数的引用&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;b style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff3333&quot; style=&quot;font-size: 25px;&quot;&gt;ResourcePatternResolver resourcePatternResolver; 资源解析器 在&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;font color=&quot;#ff3333&quot; style=&quot;font-size: 25px;&quot;&gt;&lt;b style=&quot;font-size: 25px;&quot;&gt;AbstractApplicationContext 构造函数中实现赋值&amp;nbsp;this.resourceLoader =&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;b style=&quot;color: rgb(255, 51, 51);&quot;&gt;AbstractApplicationContext&lt;/b&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;LifecycleProcessor lifecycleProcessor; 生命周期处理器&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;MessageSource messageSource 国际化的实现&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;ApplicationEventMulticaster applicationEventMulticaster; 管理许多 {@link ApplicationListener} 对象并向它们发布事件的对象实现的接口。&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;final Set&amp;lt;ApplicationListener&amp;lt;?&amp;gt;&amp;gt; applicationListeners = new LinkedHashSet&amp;lt;&amp;gt;(); 应用程序实现的监听程序的接口&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;Set&amp;lt;ApplicationListener&amp;lt;?&amp;gt;&amp;gt; earlyApplicationListeners; 本地监听器的注册&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;Set&amp;lt;ApplicationEvent&amp;gt; earlyApplicationEvents 应用程序所有时间扩展类&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#cc00cc&quot;&gt;this() 调用自己的构造方法&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;&quot;&gt;setParent(parent);&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#d5e8d4;strokeColor=#82b366;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="3390" y="-1369.99" width="1603.44" height="890" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-5" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#000000;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontSize=18;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-0" target="-McDBByZdcgpEU9wJOO_-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-32" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Verdana;fontSize=18;fontColor=#FF0000;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-0" target="-McDBByZdcgpEU9wJOO_-31" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-14" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-78" target="vhB5iVHmFAJZdGOzhbKn-10" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-0" value="设置&amp;nbsp;&lt;span style=&quot;text-align: left; font-size: 25px;&quot;&gt;&lt;font style=&quot;font-weight: bold; font-size: 25px;&quot; color=&quot;#ff3333&quot;&gt;configLocations 的值&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;div style=&quot;text-align: left; font-size: 25px;&quot;&gt;&lt;span style=&quot;background-color: initial; text-align: center; font-size: 25px;&quot;&gt;setConfigLocations(configLocations)&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;" style="whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-402.25" y="-825" width="498.5" height="95" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-7" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#000000;fontSize=18;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-4" target="-McDBByZdcgpEU9wJOO_-6" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-15" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-4" target="-McDBByZdcgpEU9wJOO_-26" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-4" value="resolvePath(locations[i])&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#e06d0d&quot; style=&quot;font-size: 25px;&quot;&gt;getEnvironment() 获取当前系统环境变量 environment 变量在这里完成了赋值&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;getEnvironment().resolveRequiredPlaceholders(path) 创建资源加载器解析资源所在路径&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;rounded=0;align=left;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-2020" y="-864.37" width="1060" height="173.75" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-9" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#000000;fontSize=18;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-6" target="-McDBByZdcgpEU9wJOO_-8" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-8" value="AbstractEnvironment&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;final String IGNORE_GETENV_PROPERTY_NAME = &quot;spring.getenv.ignore&quot; 系统环境需要忽略的属性&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;final String ACTIVE_PROFILES_PROPERTY_NAME = &quot;spring.profiles.active&quot;&amp;nbsp;设置以指定活动配置文件的属性名称&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;static final String RESERVED_DEFAULT_PROFILE_NAME = &quot;default&quot;;&amp;nbsp; &amp;nbsp;默认配置文件名称的名称&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;b style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ffff00&quot; style=&quot;font-size: 25px;&quot;&gt;final MutablePropertySources propertySources = new MutablePropertySources()&amp;nbsp; 属性配置类 -&amp;gt; 父类构造函数中调用了&amp;nbsp;customizePropertySources(this.propertySources) 来初始化该变量，具体实现子类的重写方法中(同样我们也可以指定 系统(System) 或者 JVM 需要加载的属性)&lt;/font&gt;&lt;/b&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#EF8707;strokeColor=#666666;fontColor=#333333;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-3260" y="-1470" width="1160" height="391" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-16" value="" style="group;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1" connectable="0">
          <mxGeometry x="-3205" y="-927.5" width="1050" height="300" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-6" value="&lt;font style=&quot;font-size: 25px;&quot;&gt;createEnvironment -&amp;gt; new StandardEnvironment()&lt;br style=&quot;&quot;&gt;&lt;/font&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 25px;&quot;&gt;final String SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME = &quot;systemEnvironment&quot; 系统环境变量属性&lt;br style=&quot;&quot;&gt;&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 25px;&quot;&gt;final String SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME = &quot;systemProperties&quot; JVM 环境变量属&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#EF8707;strokeColor=#666666;rounded=0;fontColor=#333333;horizontal=1;verticalAlign=top;fontSize=18;" parent="-McDBByZdcgpEU9wJOO_-16" vertex="1">
          <mxGeometry width="1050" height="300.00000000000006" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-15" value="&lt;font color=&quot;#000000&quot; style=&quot;font-size: 25px;&quot;&gt;customizePropertySources(MutablePropertySources propertySources)&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontFamily=Verdana;fontSize=25;fontColor=#FFFF00;strokeColor=#EF8707;fillColor=#FFFF00;align=left;" parent="-McDBByZdcgpEU9wJOO_-16" vertex="1">
          <mxGeometry x="16.153846153846153" y="207.69230769230776" width="1017.6923076923076" height="69.23076923076924" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-26" value="doResolvePlaceholders(String text, PropertyPlaceholderHelper helper)实现对了资源路径的解析" style="whiteSpace=wrap;html=1;align=left;fillColor=#FF0000;strokeColor=#82b366;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-2030" y="-1160" width="1080" height="110" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-36" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Verdana;fontSize=18;fontColor=#FF0000;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-31" target="-McDBByZdcgpEU9wJOO_-35" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-39" value="&lt;div style=&quot;text-align: left; font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=18;fontFamily=Verdana;fontColor=#000000;" parent="-McDBByZdcgpEU9wJOO_-36" vertex="1" connectable="0">
          <mxGeometry x="0.007" y="2" relative="1" as="geometry">
            <mxPoint x="128" y="-8" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-11" value="&lt;div style=&quot;font-family: Verdana; font-size: 18px; text-align: left;&quot;&gt;给 Spring&lt;/div&gt;&lt;span style=&quot;font-family: Verdana; font-size: 18px;&quot;&gt;一些基础属性&lt;/span&gt;&lt;br style=&quot;font-family: Verdana; font-size: 18px;&quot;&gt;&lt;div style=&quot;font-family: Verdana; font-size: 18px; text-align: left;&quot;&gt;赋值&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="-McDBByZdcgpEU9wJOO_-36" vertex="1" connectable="0">
          <mxGeometry x="-0.2804" y="1" relative="1" as="geometry">
            <mxPoint x="-1" y="22" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-31" value="refresh() 完成了 bean 的创建过程；以下流程是 refresh 细节" style="whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-589.5" y="-640" width="873" height="70" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-38" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Verdana;fontSize=18;fontColor=#000000;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-35" target="-McDBByZdcgpEU9wJOO_-37" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-40" value="创建 BeanFactory 工厂" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=18;fontFamily=Verdana;fontColor=#000000;" parent="-McDBByZdcgpEU9wJOO_-38" vertex="1" connectable="0">
          <mxGeometry x="-0.3238" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-35" value="prepareRefresh&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;this.startupDate = System.currentTimeMillis() 启动时间赋值&lt;/span&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;this.closed.set(false);&amp;nbsp;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;this.active.set(true);&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;initPropertySources() 父类留给子类有关环境属性的扩展方法，父类没有实现具体逻辑&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;getEnvironment().validateRequiredProperties() 校验环境属性是否全部填充完成&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;earlyApplicationListeners、applicationListeners 在 Spring Boot 中会提前加载很多事件监听器(14 个)：逻辑是判断 earlyApplicationListeners 集合是否为 null，如果为 null 将 applicationListeners 集合赋值给 earlyApplicationListeners；反之，则将 applicationListeners 集合清空，将原有 earlyApplicationListeners 赋值给 applicationListeners (Spring Boot 中就是利用了这个逻辑)&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;rounded=0;align=left;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-2250" y="-380" width="4190" height="310" as="geometry" />
        </mxCell>
        <mxCell id="ZeKIb3R78Dg6MLLJOp1T-9" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-37" target="-McDBByZdcgpEU9wJOO_-43" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-1" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-37" target="t0Rb5IohVzh9Mymz01Zp-0">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-2" value="&lt;span style=&quot;font-size: 18px; text-align: left; background-color: rgb(248, 249, 250);&quot;&gt;设置 bean 工厂属性&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="t0Rb5IohVzh9Mymz01Zp-1">
          <mxGeometry x="-0.326" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-37" value="obtainFreshBeanFactory&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#e06d0d&quot; style=&quot;font-size: 25px;&quot;&gt;refreshBeanFactory(); 针对 beanFactory的一系例操作&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;getBeanFactory 获取创建成功的 BeanFactory&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#d5e8d4;strokeColor=#82b366;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-485" y="76.72" width="660" height="148.45" as="geometry" />
        </mxCell>
        <mxCell id="ZeKIb3R78Dg6MLLJOp1T-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-43" target="-McDBByZdcgpEU9wJOO_-47" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ZeKIb3R78Dg6MLLJOp1T-13" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.561;entryDx=0;entryDy=0;entryPerimeter=0;fontSize=25;fontColor=#80FF00;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-43" target="-McDBByZdcgpEU9wJOO_-61" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-43" value="refreshBeanFactory&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;存在 BeanFactory 就销毁&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ffff00&quot; style=&quot;font-size: 25px;&quot;&gt;创建 BeanFactory 工厂&amp;nbsp;DefaultListableBeanFactory beanFactory = createBeanFactory()&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font style=&quot;font-size: 25px;&quot;&gt;customizeBeanFactory(beanFactory); 看到这个有没有觉得熟悉：类似前面提到系统环境属性的扩展点: 定义&amp;nbsp; beanFactory 的属性：&lt;/font&gt;allowBeanDefinitionOverriding，allowCircularReferences，提供对 beanFactory的操作接口：比如添加&amp;nbsp;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#80ff00&quot; style=&quot;font-size: 25px;&quot;&gt;loadBeanDefinitions(beanFactory);&amp;nbsp;初始化配置定义的 bean 信息，并读取解析&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;&quot;&gt;this.beanFactory = beanFactory;&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#E06D0D;strokeColor=#82b366;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-2750" y="11.9" width="1270" height="278.1" as="geometry" />
        </mxCell>
        <mxCell id="ZeKIb3R78Dg6MLLJOp1T-10" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-47" target="-McDBByZdcgpEU9wJOO_-50" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-47" value="createBeanFactory&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;创建了一个DefaultListableBeanFactory对象，又是一层层的 super&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FFFF00;strokeColor=#82b366;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-3430" y="-4.060000000000002" width="570" height="179.4" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-53" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Verdana;fontSize=18;fontColor=#FF0000;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-50" target="-McDBByZdcgpEU9wJOO_-52" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-50" value="DefaultListableBeanFactory&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;boolean allowBeanDefinitionOverriding = true&amp;nbsp;是否允许重新注册具有相同名称的不同定义&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;boolean allowEagerClassLoading = true&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;AutowireCandidateResolver autowireCandidateResolver = SimpleAutowireCandidateResolver.INSTANCE&amp;nbsp;用于检查 bean 定义是否为自动装配候选者的解析器&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;final Map&amp;lt;Class&amp;lt;?&amp;gt;, Object&amp;gt; resolvableDependencies = new ConcurrentHashMap&amp;lt;&amp;gt;(16) 从依赖类型映射到相应的自动装配值&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;final Map&amp;lt;String, BeanDefinition&amp;gt; beanDefinitionMap = new ConcurrentHashMap&amp;lt;&amp;gt;(256)&amp;nbsp;bean 定义对象的映射，以 bean 名称为键&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;final Map&amp;lt;String, BeanDefinitionHolder&amp;gt; mergedBeanDefinitionHolders = new ConcurrentHashMap&amp;lt;&amp;gt;(256)&amp;nbsp;单例和非单例 bean 名称的映射，以依赖类型为键。&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;final Map&amp;lt;Class&amp;lt;?&amp;gt;, String[]&amp;gt; singletonBeanNamesByType = new ConcurrentHashMap&amp;lt;&amp;gt;(64) 仅单例 bean 名称的映射，以依赖类型为键&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;volatile Set&amp;lt;String&amp;gt; manualSingletonNames = new LinkedHashSet&amp;lt;&amp;gt;(16);&amp;nbsp; 按照顺序手动注册单例 bean 的集合&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FF0000;strokeColor=#82b366;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-5370" y="-116.85" width="1820" height="405" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-55" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Verdana;fontSize=18;fontColor=#00FF00;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-52" target="-McDBByZdcgpEU9wJOO_-54" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-52" value="AbstractAutowireCapableBeanFactory&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;InstantiationStrategy instantiationStrategy = new CglibSubclassingInstantiationStrategy() bea 实例化策略&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;ParameterNameDiscoverer parameterNameDiscoverer = new DefaultParameterNameDiscoverer() 方法参数名称的解析策略&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;boolean allowCircularReferences = true; 是否尝试自动解决循环依赖&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;boolean allowRawInjectionDespiteWrapping = false 是否在循环依赖的情况下注入 bean&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;final Set&amp;lt;Class&amp;lt;?&amp;gt;&amp;gt; ignoredDependencyTypes = new HashSet&amp;lt;&amp;gt;() 自动装配需要忽略的类型，如字符串等，默认为 null&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#00ff00&quot; style=&quot;font-size: 25px;&quot;&gt;final Set&amp;lt;Class&amp;lt;?&amp;gt;&amp;gt; ignoredDependencyInterfaces = new HashSet&amp;lt;&amp;gt;();&amp;nbsp;在依赖检查和自动装配时忽略依赖接口，作为类对象集。默认情况下，仅忽略 BeanFactory 接口。&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;final NamedThreadLocal&amp;lt;String&amp;gt; currentlyCreatedBean = new NamedThreadLocal&amp;lt;&amp;gt;(&quot;Currently created bean&quot;)当前创建的 bean 的名称，用于对 getBean 等调用的隐式依赖注册，这些调用由用户指定的供应商回调触发&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;final ConcurrentMap&amp;lt;String, BeanWrapper&amp;gt; factoryBeanInstanceCache = new ConcurrentHashMap&amp;lt;&amp;gt;()&amp;nbsp;未完成 FactoryBean 实例的缓存&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;final ConcurrentMap&amp;lt;Class&amp;lt;?&amp;gt;, Method[]&amp;gt; factoryMethodCandidateCache = new ConcurrentHashMap&amp;lt;&amp;gt;()&amp;nbsp;每个工厂类的候选工厂方法缓存&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;final ConcurrentMap&amp;lt;Class&amp;lt;?&amp;gt;, PropertyDescriptor[]&amp;gt; filteredPropertyDescriptorsCache 过滤后的 PropertyDescriptor 缓存：bean 类到 PropertyDescriptor 数组&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FF0000;strokeColor=#82b366;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-8030" y="-115.91" width="2520" height="404.06" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-54" value="AbstractAutowireCapableBeanFactory：构造函数执行 -&amp;gt; 忽略依赖接口&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;ignoreDependencyInterface(BeanNameAware.class);&lt;/span&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;font-size: 25px;&quot;&gt;  &lt;/span&gt;ignoreDependencyInterface(BeanFactoryAware.class);&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;font-size: 25px;&quot;&gt;  &lt;/span&gt;ignoreDependencyInterface(BeanClassLoaderAware.class);&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#00FF00;strokeColor=#82b366;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-7172.5" y="-412.5" width="805" height="207.5" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-9" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontSize=18;startArrow=none;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-75" target="-McDBByZdcgpEU9wJOO_-81" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-10" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontSize=18;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-61" target="-McDBByZdcgpEU9wJOO_-63" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-11" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontSize=18;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-61" target="-McDBByZdcgpEU9wJOO_-65" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-16" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-61" target="-McDBByZdcgpEU9wJOO_-75" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-61" value="&lt;font color=&quot;#ea6b66&quot; style=&quot;font-size: 25px;&quot;&gt;loadBeanDefinitions(beanFactory)：加载 XML(一系列的重载调用) 读取 bean 信息并解析&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#cc6600&quot; style=&quot;font-size: 25px;&quot;&gt;&lt;font style=&quot;font-size: 25px;&quot;&gt;使用适配器模式将 beanFactory 转为转&amp;nbsp;&lt;/font&gt;XmlBeanDefinitionReader XML 解析器&amp;nbsp;XmlBeanDefinitionReader beanDefinitionReader = new XmlBeanDefinitionReader(beanFactory);&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;设置 XML 解析器需要的运行环境&amp;nbsp;beanDefinitionReader.setEnvironment(this.getEnvironment());&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;设置资源加载器&amp;nbsp;beanDefinitionReader.setResourceLoader(this);&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;设置用于解析 SAX 实体解析器，默认使用&amp;nbsp;ResourceEntityResolver 解析器。可以自定义实体解析覆盖，例如相对于某些特定的基本路径&amp;nbsp;beanDefinitionReader.setEntityResolver(new ResourceEntityResolver(this));&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#00cccc&quot; style=&quot;font-size: 25px;&quot;&gt;初始化解析器属性：initBeanDefinitionReader(beanDefinitionReader);&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ffff00&quot; style=&quot;font-size: 25px;&quot;&gt;重载&amp;nbsp;loadBeanDefinitions(beanDefinitionReader);&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#d5e8d4;strokeColor=#82b366;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-5254.04" y="875.6199999999999" width="2394.04" height="290" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-18" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=18;fontColor=#CC6600;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-63" target="swjzN8IUrycUAb-GRa1w-17" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-63" value="创建&amp;nbsp;XmlBeanDefinitionReader 对象&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;static final int VALIDATION_NONE = XmlValidationModeDetector.VALIDATION_NONE -&amp;gt; 0;&amp;nbsp; 禁用验证&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;static final int VALIDATION_AUTO = XmlValidationModeDetector.VALIDATION_AUTO; -&amp;gt; 1 表示应自动检测验证模式。&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;static final int VALIDATION_DTD = XmlValidationModeDetector.VALIDATION_DTD; -&amp;gt; 2 表示 DTD 格式&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;static final int VALIDATION_XSD = XmlValidationModeDetector.VALIDATION_XSD; -&amp;gt; 3 表示 XSD 格式&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;supper()&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#E06D0D;strokeColor=#82b366;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-7044.04" y="498.76" width="1410" height="272.5" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-68" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Verdana;fontSize=18;fontColor=#FFFF00;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-65" target="-McDBByZdcgpEU9wJOO_-67" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-65" value="ResourceEntityResolver&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;ol style=&quot;font-size: 18px;&quot;&gt;&lt;li style=&quot;font-size: 18px;&quot;&gt;&lt;font color=&quot;#ffff00&quot; style=&quot;font-size: 18px;&quot;&gt;super(resourceLoader.getClassLoader());&amp;nbsp;&amp;nbsp;调用父类方法获取对应的解析器 DTD or XSD&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FF0000;strokeColor=#82b366;rounded=0;fontSize=18;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-6399.04" y="1334.37" width="765" height="90" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-21" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-67" target="-McDBByZdcgpEU9wJOO_-69" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-22" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-67" target="-McDBByZdcgpEU9wJOO_-73" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-67" value="DelegatingEntityResolver&lt;br style=&quot;font-size: 18px;&quot;&gt;static final String DTD_SUFFIX = &quot;.dtd&quot;;&lt;br style=&quot;font-size: 18px;&quot;&gt;static final String XSD_SUFFIX = &quot;.xsd&quot;;&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;ol style=&quot;font-size: 18px;&quot;&gt;&lt;li style=&quot;font-size: 18px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 18px;&quot;&gt;this.dtdResolver = new BeansDtdResolver();&amp;nbsp; &amp;nbsp;创建 DTD 解析器&lt;/font&gt;&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 18px;&quot;&gt;&lt;font color=&quot;#00cccc&quot; style=&quot;font-size: 18px;&quot;&gt;new PluggableSchemaResolver(classLoader) XSD 解析器 -&amp;gt; &quot;META-INF/spring.schemas&quot;&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;rounded=0;fontSize=18;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-7458.04" y="1289.37" width="780" height="180" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-69" value="BeansDtdResolver&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;static final String DTD_EXTENSION = &quot;.dtd&quot;;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;static final String DTD_NAME = &quot;spring-beans&quot;;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FF0000;strokeColor=#82b366;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-8464.04" y="1302.5" width="780" height="153.75" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-73" value="PluggableSchemaResolver XSD 文件路径映射&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;static final String DEFAULT_SCHEMA_MAPPINGS_LOCATION = &quot;META-INF/spring.schemas&quot;;定义架构映射的文件的位置。可以存在于多个 JAR 文件中&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;volatile Map&amp;lt;String, String&amp;gt; schemaMappings 资源路径映射&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div style=&quot;font-size: 25px;&quot;&gt;注意这里调试的时候&amp;nbsp;schemaMappings 发现被赋值了，这其实是 IDEA 自己调用了&amp;nbsp;PluggableSchemaResolver toString 方法，而 toString 方法中又包含了&amp;nbsp;getSchemaMappings() 导致这个 Map 被赋值。&lt;/div&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#00CCCC;strokeColor=#82b366;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-8179.79" y="1625.62" width="2223.5" height="275" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-80" value="&lt;font style=&quot;font-size: 25px;&quot; color=&quot;#000000&quot;&gt;主流程&lt;/font&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontFamily=Verdana;fontSize=25;fontColor=#00CCCC;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-251" y="-1290" width="196" height="50" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-84" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Verdana;fontSize=18;fontColor=#FF0000;entryX=1;entryY=0.5;entryDx=0;entryDy=0;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-81" target="-McDBByZdcgpEU9wJOO_-83" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-13" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;fontSize=18;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-81" target="-McDBByZdcgpEU9wJOO_-85" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-14" value="String[] -&amp;gt; String" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=18;" parent="swjzN8IUrycUAb-GRa1w-13" vertex="1" connectable="0">
          <mxGeometry x="0.2091" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-81" value="loadBeanDefinitions(XmlBeanDefinitionReader reader)：两种获取文件资源路径&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;以 Resource 方式获取&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;以 String 的形式获取&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#00cccc&quot; style=&quot;font-size: 25px;&quot;&gt;重载&amp;nbsp;reader.loadBeanDefinitions(configLocations)&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-7564.04" y="925.6199999999999" width="1080" height="190" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-83" value="String[] configLocations = getConfigLocations()：&lt;br style=&quot;font-size: 25px;&quot;&gt;看到这个 getConfigLocations 应该很熟悉了吧，在设置配置文件路径的时候赋的值" style="whiteSpace=wrap;html=1;align=left;fillColor=#FF0000;strokeColor=#FF0000;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-8734.04" y="1075.62" width="920" height="130" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-92" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18px;&quot;&gt;&amp;nbsp;String -&amp;gt; Resource[]&lt;/span&gt;" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Verdana;fontSize=18;fontColor=#FF0000;exitX=0;exitY=0.5;exitDx=0;exitDy=0;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-85" target="-McDBByZdcgpEU9wJOO_-91" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-5623.04" y="875.2399999999998" as="sourcePoint" />
            <mxPoint x="-5834.04" y="875.3169230769226" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-85" value="loadBeanDefinitions(String... locations)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;重载&amp;nbsp;loadBeanDefinitions(location)-&amp;gt;&amp;nbsp;loadBeanDefinitions(location, null)&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#00CCCC;strokeColor=#00CCCC;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-8714.04" y="735.6199999999999" width="900" height="135" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-94" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Verdana;fontSize=18;fontColor=#FFFF00;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-91" target="-McDBByZdcgpEU9wJOO_-93" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-98" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Verdana;fontSize=18;fontColor=#00CCCC;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-91" target="-McDBByZdcgpEU9wJOO_-97" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-91" value="loadBeanDefinitions(String location, @Nullable Set&amp;lt;Resource&amp;gt; actualResources)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;在最开始的 supper 中完成了父类&amp;nbsp;ResourcePatternResolver 变量&amp;nbsp;this.resourceLoader = resourceLoader(AbstractApplicationContext) 赋值&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ffff00&quot; style=&quot;font-size: 25px;&quot;&gt;Resource[] resources = ((ResourcePatternResolver) resourceLoader).getResources(location)&amp;nbsp;获取具体资源解析器的定位 ResourcePatternResolver 有多个实现&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#00cccc&quot; style=&quot;font-size: 25px;&quot;&gt;重载 loadBeanDefinitions(resources)&amp;nbsp;&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FF0000;strokeColor=#FF0000;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-10914.04" y="703.8699999999999" width="1830" height="198.5" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-93" value="getResources(String locationPattern)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;String CLASSPATH_ALL_URL_PREFIX = &quot;classpath*:&quot;&amp;nbsp; 资源文件属性是否以 classpath* 开始&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;或者以 war: 开始&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;都不是将 location 封装成一个 Resource[] 对象&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-12084.04" y="370" width="1110" height="215" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-19" value="&lt;font color=&quot;#000000&quot;&gt;Resources[] -&amp;gt; Resources&lt;/font&gt;" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=18;fontColor=#CC6600;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-97" target="-McDBByZdcgpEU9wJOO_-99" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-97" value="loadBeanDefinitions(Resource... resources)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;for 循环处理 resources&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#00CCCC;strokeColor=#00CCCC;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-11846.54" y="935.6199999999999" width="635" height="140" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-102" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Verdana;fontSize=18;fontColor=#FF0000;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-99" target="-McDBByZdcgpEU9wJOO_-101" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-103" value="&lt;span style=&quot;font-family: Helvetica; font-size: 18px; text-align: left; background-color: rgb(248, 249, 250);&quot;&gt;&lt;br style=&quot;font-size: 18px;&quot;&gt;&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=18;fontFamily=Verdana;fontColor=#000000;" parent="-McDBByZdcgpEU9wJOO_-102" vertex="1" connectable="0">
          <mxGeometry x="0.3588" relative="1" as="geometry">
            <mxPoint x="15" y="120" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-105" value="Resource -&amp;gt; EncodeResource" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=18;fontFamily=Verdana;fontColor=#000000;" parent="-McDBByZdcgpEU9wJOO_-102" vertex="1" connectable="0">
          <mxGeometry x="-0.0664" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-99" value="loadBeanDefinitions(Resource resource)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;将 resource 封装为 encodedResource，该类实现了 InputStreamSource 并设置解析编码格式，这里什么都没有做，传的都是 null&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;继续重载调用&amp;nbsp;loadBeanDefinitions(EncodedResource encodedResource)&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#00CCCC;strokeColor=#00CCCC;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-12271.54" y="1225.62" width="1485" height="198.75" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-107" value="&lt;font color=&quot;#000000&quot; style=&quot;font-size: 18px;&quot;&gt;inputSource -&amp;gt; Document&lt;/font&gt;" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Verdana;fontSize=18;fontColor=#FFFF00;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-101" target="-McDBByZdcgpEU9wJOO_-106" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-101" value="loadBeanDefinitions(EncodedResource encodedResource)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;Set&amp;lt;EncodedResource&amp;gt; currentResources = this.resourcesCurrentlyBeingLoaded.get() 获取已经加载的 encodedResource&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;将 encodedResource 转换为输入流&amp;nbsp;InputStream inputStream = encodedResource.getResource().getInputStream()，使用InputSource 封装&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ffff00&quot; style=&quot;font-size: 25px;&quot;&gt;调用&amp;nbsp;doLoadBeanDefinitions(inputSource, encodedResource.getResource())&amp;nbsp;&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FF0000;strokeColor=#FF0000;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-12134.04" y="1605.62" width="1210" height="250" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-110" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontFamily=Verdana;fontSize=18;fontColor=#00CCCC;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-106" target="-McDBByZdcgpEU9wJOO_-109" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-16" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=18;fontColor=#FF0000;strokeWidth=5;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-106" target="swjzN8IUrycUAb-GRa1w-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-106" value="doLoadBeanDefinitions(InputSource inputSource, Resource resource)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#00cccc&quot; style=&quot;font-size: 25px;&quot;&gt;解析配置文件内容，将其属性节点内容放入 Document 对象中&amp;nbsp;Document doc = doLoadDocument(inputSource, resource)&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font style=&quot;font-size: 25px;&quot; color=&quot;#ff0000&quot;&gt;创建并填充 BeanDefinition 对象&amp;nbsp;&lt;/font&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;int count = registerBeanDefinitions(doc, resource)&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-12041.54" y="2035.62" width="1025" height="190" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-18" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-109" target="-McDBByZdcgpEU9wJOO_-111" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-19" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-109" target="-McDBByZdcgpEU9wJOO_-113" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-109" value="Document doLoadDocument(InputSource inputSource, Resource resource)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;div style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;getEntityResolver() 获取解析器(在创建&amp;nbsp;XmlBeanDefinitionReader的时候就已经赋值)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ffff00&quot; style=&quot;font-size: 25px;&quot;&gt;getValidationModeForResource 确定解析文档的格式&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;this.documentLoader.loadDocument(inputSource, getEntityResolver(), this.errorHandler,&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;getValidationModeForResource(resource), isNamespaceAware()) 使用 document 加载配置文集内容&lt;/span&gt;&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#00CCCC;strokeColor=#00CCCC;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-12084.04" y="2455.62" width="1110" height="250" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-111" value="&lt;div style=&quot;font-size: 25px;&quot;&gt;loadDocument(InputSource inputSource, EntityResolver entityResolver,&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;ErrorHandler errorHandler, int validationMode, boolean namespaceAware)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;DocumentBuilderFactory factory = createDocumentBuilderFactory(validationMode, namespaceAware) 创建解析 Document 工厂&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;构建解析器&amp;nbsp;&lt;/span&gt;DocumentBuilder builder = createDocumentBuilder(factory, entityResolver, errorHandler)&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;使用解析器解析 Document 获取配置文档的内容节点&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FF0000;strokeColor=#FF0000;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-10894.04" y="2480.62" width="1720" height="200" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-20" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-113" target="-McDBByZdcgpEU9wJOO_-115" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-113" value="getValidationModeForResource(Resource resource)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;int validationModeToUse = getValidationMode() 获取验证模式，在初始化 XmlBeanDefinitionReader 时已经赋值 1 自动识别&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;确定解析文档格式&amp;nbsp;int detectedMode = detectValidationMode(resource)&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-12241.54" y="2840" width="1425" height="220" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-115" value="this.validationModeDetector.detectValidationMode(inputStream) 委派模式&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;遍历读取文档内容，返回每行读内容 content = consumeCommentTokens(content)&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;判断 content 是否包含 DTD 声明的内容&amp;nbsp;hasDoctype(content) 如果是&amp;nbsp;isDtdValidated = true 文档格式为 DTD&amp;nbsp;&amp;nbsp;return (isDtdValidated ? VALIDATION_DTD : VALIDATION_XSD)&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;hasOpeningTag(content) 如果是 XML 则 isDtdValidated = true 则 文档格式为 XML&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FF0000;strokeColor=#FF0000;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-12579.04" y="3195" width="2100" height="190" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-26" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="swjzN8IUrycUAb-GRa1w-15" target="swjzN8IUrycUAb-GRa1w-20" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-27" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="swjzN8IUrycUAb-GRa1w-15" target="TSj2-_jnBFrJ9VK-oBdi-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-15" value="registerBeanDefinitions(Document doc, Resource resource)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;创建&amp;nbsp;BeanDefinitionDocumentReader 对象&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;记录未填充前 beanDefinitionMap 集合的大小&amp;nbsp;&amp;nbsp;int countBefore = getRegistry().getBeanDefinitionCount()&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#66ffff&quot; style=&quot;font-size: 25px;&quot;&gt;createReaderContext(resource) 创建了一个&amp;nbsp;XmlReaderContext，并获取逻辑命名空间处理器映射&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ffff33&quot; style=&quot;font-size: 25px;&quot;&gt;调用&amp;nbsp;documentReader.registerBeanDefinitions(doc, createReaderContext(resource)) 创建并填充 BeanDefinition 对象;&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FF0000;strokeColor=#FF0000;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-18464.04" y="2215.62" width="1395" height="228.75" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-17" value="AbstractBeanDefinitionReader&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;this.registry = registry =&amp;nbsp;DefaultListableBeanFactory&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#E06D0D;strokeColor=#82b366;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-7874.04" y="581.26" width="730" height="107.5" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-24" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="swjzN8IUrycUAb-GRa1w-20" target="swjzN8IUrycUAb-GRa1w-24" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-28" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="swjzN8IUrycUAb-GRa1w-20" target="swjzN8IUrycUAb-GRa1w-31" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-20" value="doRegisterBeanDefinitions(Element root)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;doRegisterBeanDefinitions(doc.getDocumentElement());&amp;nbsp; doc.getDocumentElement() 获取配置文档的标签属性&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;创建一个解析器，对应配置文档中的标签属性&amp;nbsp;this.delegate = createDelegate(getReaderContext(), root, parent)&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;判断是否是默认的命名空间，接着判断是否包含 profile 属性，对 profile 的一些逻辑处理；&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;preProcessXml(root) 父类 DefaultBeanDefinitionDocumentReader 中没有实现该方法，留给子类扩展，在 bean 定义前，可以添加 自定义元素，来扩展 XML 标签属性；&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff00ff&quot; style=&quot;font-size: 25px;&quot;&gt;parseBeanDefinitions(root, this.delegate) 解析配置文件中的标签元素&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;postProcessXml(root)&amp;nbsp; 父类 DefaultBeanDefinitionDocumentReader 中没有实现该方法，留给子类扩展，在 bean 完成 bean 定义后，可以添加自定义元素，来扩展 XML 标签属性；&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-17684.04" y="2670" width="2069" height="290" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-23" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="swjzN8IUrycUAb-GRa1w-24" target="swjzN8IUrycUAb-GRa1w-28" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-24" value="&lt;div style=&quot;font-size: 25px;&quot;&gt;BeanDefinitionParserDelegate createDelegate(&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;XmlReaderContext readerContext, Element root, @Nullable BeanDefinitionParserDelegate parentDelegate)：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;BeanDefinitionParserDelegate delegate = new BeanDefinitionParserDelegate(readerContext) 这个类中定义了许多标签属性&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;&lt;font color=&quot;#ffff00&quot; style=&quot;font-size: 25px;&quot;&gt;initDefaults(Element root, @Nullable BeanDefinitionParserDelegate parent) 初始化默认的lazy-init、autowire、依赖检查设置、init-method、destroy-method和merge设置。如果默认值未在本地显式设置，则通过回退到给定的父级来支持嵌套的“bean”元素用例。&lt;/font&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FF0000;strokeColor=#FF0000;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-15269.910000000003" y="2710" width="2940" height="210" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-28" value="initDefaults(Element root, @Nullable BeanDefinitionParserDelegate parent)：&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;populateDefaults(this.defaults, (parent != null ? parent.defaults : null), root) 使用默认的惰性初始化、自动装配、依赖性检查设置、初始化方法、销毁方法和合并设置填充给定的 DocumentDefaultsDefinition 实例&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;fireDefaultsRegistered(DefaultsDefinition defaultsDefinition)&amp;nbsp;触发默认注册事件&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-15054.04" y="2345.62" width="2508.27" height="155" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-29" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="swjzN8IUrycUAb-GRa1w-31" target="vvphals0SzpIUJqCIcSN-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-31" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="swjzN8IUrycUAb-GRa1w-31" target="swjzN8IUrycUAb-GRa1w-33" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-31" value="parseBeanDefinitions(Element root, BeanDefinitionParserDelegate delegate)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ffffff&quot; style=&quot;font-size: 25px;&quot;&gt;判断标签是否是默认的命名空间，且元素是否是 Element 类，全都符合再次判断是不是标准定义的标签，是的话就按照标准定义进行解析&amp;nbsp;parseDefaultElement(ele, delegate)&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ffff00&quot; style=&quot;font-size: 25px;&quot;&gt;不是则按照自定义标签进行解析&amp;nbsp;delegate.parseCustomElement(ele)&amp;nbsp;&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FF00FF;strokeColor=#FF00FF;rounded=0;fontColor=#000000;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-17641.79" y="3095.62" width="1984.5" height="190" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-32" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="swjzN8IUrycUAb-GRa1w-33" target="swjzN8IUrycUAb-GRa1w-44" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-33" value="parseDefaultElement(Element ele, BeanDefinitionParserDelegate delegate)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;判断是否是 import 标签：importBeanDefinitionResource(ele)&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;判断是否是alias 标签：processAliasRegistration(ele)&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#0000ff&quot; style=&quot;font-size: 25px;&quot;&gt;判断是否是 bean 标签：processBeanDefinition(ele, delegate)&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;判断是否是&amp;nbsp;beans 标签：doRegisterBeanDefinitions(ele)&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FFFFFF;strokeColor=#000000;fontColor=#000000;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-14296.54" y="3335.62" width="855" height="240" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-40" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="swjzN8IUrycUAb-GRa1w-36" target="swjzN8IUrycUAb-GRa1w-40" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-36" value="&lt;font color=&quot;#ffffff&quot; style=&quot;font-size: 25px;&quot;&gt;parseBeanDefinitionElement(Element ele)：&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;color: rgb(255, 255, 255); font-size: 25px;&quot;&gt;获取 bean 的 id 属性；&lt;/li&gt;&lt;li style=&quot;color: rgb(255, 255, 255); font-size: 25px;&quot;&gt;获取 bean 的 name 属性&lt;/li&gt;&lt;li style=&quot;color: rgb(255, 255, 255); font-size: 25px;&quot;&gt;校验 bean 的 name 是否唯一&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ffff00&quot; style=&quot;font-size: 25px;&quot;&gt;parseBeanDefinitionElement(ele, beanName, containingBean) 对 bean 元素进行详细解析：比如 bean 类是一个接口、抽象类等等&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FF3333;strokeColor=#000000;fontColor=#000000;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-15208.04" y="4195.62" width="1500" height="271.25" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-40" value="&lt;div style=&quot;font-size: 25px;&quot;&gt;parseBeanDefinitionElement(&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;Element ele, String beanName, @Nullable BeanDefinition containingBean)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;获取 class 属性&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;className = ele.getAttribute(CLASS_ATTRIBUTE).trim()&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;获取 parent 属性&amp;nbsp;parent = ele.getAttribute(PARENT_ATTRIBUTE)&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;AbstractBeanDefinition bd = createBeanDefinition(className, parent);&amp;nbsp;&amp;nbsp;为给定的类名和父名创建一个 bean 定义 实际操作类是 GenericBeanDefinition，其实此时已经满足实例化 BeanDefinition 了。创建了GenericBeanDefinition 对象&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;接着是对标签元素的一系列解析，以及对 GenericBeanDefinition&amp;nbsp;实现了 BeanDefinition 接口 的属性填充：比如构造函数解析、子类方法解析等&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;得到完整的 beanDeinitions 后，返回一个&amp;nbsp;new BeanDefinitionHolder(beanDefinition, beanName, aliasesArray)，该类是对 BeanDefinition 的封装。&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-15311.79" y="4555.62" width="1707.5" height="320" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-37" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="swjzN8IUrycUAb-GRa1w-44" target="swjzN8IUrycUAb-GRa1w-36" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-38" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="swjzN8IUrycUAb-GRa1w-44" target="vvphals0SzpIUJqCIcSN-0" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="swjzN8IUrycUAb-GRa1w-44" value="&lt;font color=&quot;#ffffff&quot; style=&quot;font-size: 25px;&quot;&gt;processBeanDefinition(Element ele, BeanDefinitionParserDelegate delegate)：&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;解析标签元素得到&amp;nbsp;BeanDefinitionHolder -&amp;gt;delegate.parseBeanDefinitionElement(ele)&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#80ff00&quot; style=&quot;font-size: 25px;&quot;&gt;向 IOC 容器注册解析得到 beanDefinition 的地方&amp;nbsp;BeanDefinitionReaderUtils.registerBeanDefinition(bdHolder, getReaderContext().getRegistry())&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#3333FF;strokeColor=#000000;fontColor=#000000;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-14624.04" y="3745.62" width="1510" height="225.62" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-39" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="vvphals0SzpIUJqCIcSN-0" target="vvphals0SzpIUJqCIcSN-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="vvphals0SzpIUJqCIcSN-0" value="registerBeanDefinition(String beanName, BeanDefinition beanDefinition)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;获取 bean 名称&amp;nbsp;BeanDefinition existingDefinition = this.beanDefinitionMap.get(beanName)&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;registry.registerBeanDefinition(beanName, definitionHolder.getBeanDefinition()) 注册bean&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;遍历注册 beanDefinition 的别名，其大致流程与注册 beanDefinition 相似，最后将别名放入&amp;nbsp;this.aliasMap.put(alias, name) 集合中&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#80FF00;strokeColor=#000000;fontColor=#000000;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-13124.04" y="4195.62" width="1472.5" height="205.63" as="geometry" />
        </mxCell>
        <mxCell id="vvphals0SzpIUJqCIcSN-2" value="&lt;div style=&quot;font-size: 25px;&quot;&gt;registerBeanDefinition(String beanName, BeanDefinition beanDefinition)：&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/div&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;判断该 bean 是否已经创建，如果已经创建，判断是否允许被覆盖&amp;nbsp;isAllowBeanDefinitionOverriding() ，不允许抛出异常，允许的话继续执行，后续是一系列的判断然后输出日志，最后将 beanDefinition 放入&amp;nbsp;beanDefinitionMap；&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;如果没有创建，判断这个工厂的 bean 创建阶段是否已经开始，如果开始则需要将此时的 beanDefinition 放入，移除旧的名称集&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;如果这个工程的 bean 的创建工程没有开始，则将 beanName -&amp;gt; beanDefinition 放入 beanDefinitionMap，名称 beanName放入&amp;nbsp;beanDefinitionNames 集合中，此时就已经将 beanDefinition 注册成功了&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FF3333;strokeColor=#000000;fontColor=#000000;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-13567.79" y="4555.62" width="2360" height="250" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-30" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=27;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="vvphals0SzpIUJqCIcSN-4" target="TSj2-_jnBFrJ9VK-oBdi-0" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="vvphals0SzpIUJqCIcSN-4" value="BeanDefinition parseCustomElement(Element ele)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;parseCustomElement(ele, null)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;fontColor=#000000;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-17027.04" y="3426.87" width="755" height="130" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-41" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="TSj2-_jnBFrJ9VK-oBdi-0" target="5atNqO5YCdcayf-Q1qNk-0" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="TSj2-_jnBFrJ9VK-oBdi-0" value="parseCustomElement(Element ele, @Nullable BeanDefinition containingBd)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;获取标签对应的命名空间 比如：context对应 url： http://www.springframework.org/schema/context&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;获取解析命名空间的处理器&amp;nbsp;NamespaceHandler ：NamespaceHandler handler = this.readerContext.getNamespaceHandlerResolver().resolve(namespaceUri)&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;fontColor=#000000;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-17564.54" y="3685.62" width="1830" height="160" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-33" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="TSj2-_jnBFrJ9VK-oBdi-3" target="TSj2-_jnBFrJ9VK-oBdi-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="TSj2-_jnBFrJ9VK-oBdi-3" value="XmlReaderContext createReaderContext(Resource resource)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#9933ff&quot; style=&quot;font-size: 25px;&quot;&gt;getNamespaceHandlerResolver 如果没有指定，则获取默认的命名空间处理器&amp;nbsp;DefaultNamespaceHandlerResolver，读取默认的 handler 路径：&amp;nbsp;META-INF/spring.handlers&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;创建一个&amp;nbsp;XmlReaderContext 对象&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#66FFFF;strokeColor=#66FFFF;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-20204.04" y="2670" width="1960" height="170" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-34" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="TSj2-_jnBFrJ9VK-oBdi-5" target="TSj2-_jnBFrJ9VK-oBdi-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="TSj2-_jnBFrJ9VK-oBdi-5" value="&lt;font color=&quot;#ffffff&quot; style=&quot;font-size: 25px;&quot;&gt;NamespaceHandlerResolver getNamespaceHandlerResolver()：&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/font&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ffffff&quot; style=&quot;font-size: 25px;&quot;&gt;如果命名处理器为 null 则创建一个默认的&amp;nbsp;this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#9933FF;strokeColor=#9933FF;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-19924.04" y="2955.62" width="1400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-35" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="TSj2-_jnBFrJ9VK-oBdi-7" target="TSj2-_jnBFrJ9VK-oBdi-9" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="TSj2-_jnBFrJ9VK-oBdi-7" value="&lt;font color=&quot;#ffffff&quot; style=&quot;font-size: 25px;&quot;&gt;NamespaceHandlerResolver createDefaultNamespaceHandlerResolver()&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;color: rgb(255, 255, 255); font-size: 25px;&quot;&gt;如果资源处理器不为 null，则取资源类加载器&amp;nbsp; getResourceLoader().getClassLoader()，否则获取 beanClassLoader bean 加载器；&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#66ff66&quot; style=&quot;font-size: 25px;&quot;&gt;创建&amp;nbsp;new DefaultNamespaceHandlerResolver(cl) 对象&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#9933FF;strokeColor=#9933FF;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-19979.04" y="3225.62" width="1510" height="151.25" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-36" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="TSj2-_jnBFrJ9VK-oBdi-9" target="TSj2-_jnBFrJ9VK-oBdi-11" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="TSj2-_jnBFrJ9VK-oBdi-9" value="DefaultNamespaceHandlerResolver(@Nullable ClassLoader classLoader)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;this(classLoader, DEFAULT_HANDLER_MAPPINGS_LOCATION) 使用默认的映射文件&amp;nbsp;spring.handlers 创建新的命名空间处理器&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#66FF66;strokeColor=#66FF66;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-19761.54" y="3515.62" width="1075" height="180" as="geometry" />
        </mxCell>
        <mxCell id="TSj2-_jnBFrJ9VK-oBdi-11" value="DefaultNamespaceHandlerResolver(@Nullable ClassLoader classLoader, String handlerMappingsLocation)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;this.handlerMappingsLocation = handlerMappingsLocation 命名空间处理器映射文件位置&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;this.classLoader = (classLoader != null ? classLoader : ClassUtils.getDefaultClassLoader())&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#66FF66;strokeColor=#66FF66;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-19759.04" y="3775.62" width="1070" height="200" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-42" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="5atNqO5YCdcayf-Q1qNk-0" target="5atNqO5YCdcayf-Q1qNk-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-43" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="5atNqO5YCdcayf-Q1qNk-0" target="5atNqO5YCdcayf-Q1qNk-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="5atNqO5YCdcayf-Q1qNk-0" value="&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;this.readerContext.getNamespaceHandlerResolver()：这个获取命名空间处理器应该很熟悉，在前面&amp;nbsp;XmlReaderContext 的时候 this.namespaceHandlerResolver 就被赋值了；&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ffff00&quot; style=&quot;font-size: 25px;&quot;&gt;this.readerContext.getNamespaceHandlerResolver().resolve(namespaceUri) 获取NamespaceHandler 处理器的映射&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#00ff00&quot; style=&quot;font-size: 25px;&quot;&gt;通过命名空间处理器解析配置文件 handler.parse(ele, new ParserContext(this.readerContext, this, containingBd))&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FF0000;strokeColor=#FF0000;fontColor=#000000;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-17639.54" y="3955.62" width="1980" height="155.62" as="geometry" />
        </mxCell>
        <mxCell id="5atNqO5YCdcayf-Q1qNk-3" value="NamespaceHandler resolve(String namespaceUri)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;Map&amp;lt;String, Object&amp;gt; handlerMappings = getHandlerMappings()&amp;nbsp;延迟加载指定的 NamespaceHandler 映射&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 25px;&quot;&gt;实例化命名空间处理器 NamespaceHandler namespaceHandler = (NamespaceHandler) BeanUtils.instantiateClass(handlerClass);&lt;/span&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;初始化自定义元素 namespaceHandler.init();&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;将得到的映射文件 Uri 与 命名空间处理器放入 handlerMappings 集合handlerMappings.put(namespaceUri, namespaceHandler);&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;fontColor=#000000;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-19284.04" y="4265.62" width="1510" height="230" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-44" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="5atNqO5YCdcayf-Q1qNk-5" target="5atNqO5YCdcayf-Q1qNk-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-45" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="5atNqO5YCdcayf-Q1qNk-5" target="5atNqO5YCdcayf-Q1qNk-11" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="5atNqO5YCdcayf-Q1qNk-5" value="BeanDefinition parse(Element element, ParserContext parserContext)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;在 ParserContext&amp;nbsp; bean 定义解析过程中传递的上下文，封装所有相关配置和状态&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 25px;&quot;&gt;根据元素名称属性获取 beanDefinition 解析器：&amp;nbsp;BeanDefinitionParser parser = findParserForElement(element, parserContext)&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ff00ff&quot; style=&quot;font-size: 25px;&quot;&gt;解析器解析&amp;nbsp;parser.parse(element, parserContext)&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#00FF00;strokeColor=#00FF00;fontColor=#000000;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-17354.29" y="4235.62" width="1409.5" height="220.62" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-46" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="5atNqO5YCdcayf-Q1qNk-7" target="5atNqO5YCdcayf-Q1qNk-9" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="5atNqO5YCdcayf-Q1qNk-7" value="BeanDefinition parse(Element element, ParserContext parserContext)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;根据元素名称属性获取 beanDefinition 解析器&amp;nbsp;BeanDefinitionParser parser = findParserForElement(element, parserContext)&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FF0000;strokeColor=#FF0000;fontColor=#000000;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-18384.04" y="4645.62" width="1485" height="160" as="geometry" />
        </mxCell>
        <mxCell id="5atNqO5YCdcayf-Q1qNk-9" value="BeanDefinitionParser findParserForElement(Element element, ParserContext parserContext)：&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;String localName = parserContext.getDelegate().getLocalName(element)&amp;nbsp; 获取元素名称&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;BeanDefinitionParser parser = this.parsers.get(localName)&amp;nbsp;根据元素名称找到对应的解析器&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FF0000;strokeColor=#FF0000;fontColor=#000000;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-18177.79" y="4890" width="1072.5" height="200" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-47" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;fontSize=25;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="5atNqO5YCdcayf-Q1qNk-11" target="5atNqO5YCdcayf-Q1qNk-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="5atNqO5YCdcayf-Q1qNk-11" value="BeanDefinition parse(Element element, ParserContext parserContext)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;&lt;font color=&quot;#ffff00&quot; style=&quot;font-size: 25px;&quot;&gt;创建一个解析的对象，方便后续对元素属性的操作&amp;nbsp;AbstractBeanDefinition definition = parseInternal(element, parserContext)&lt;/font&gt;&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;创建一个&amp;nbsp;BeanDefinitionHolder&amp;nbsp;BeanDefinitionHolder holder = new BeanDefinitionHolder(definition, id, aliases)&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;调用&amp;nbsp;registerBeanDefinition(holder, parserContext.getRegistry()) 注册 BeanDefinition&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;是否要触发通知事件&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FF00FF;strokeColor=#FF00FF;fontColor=#000000;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-16734.04" y="4645.62" width="1370" height="250" as="geometry" />
        </mxCell>
        <mxCell id="5atNqO5YCdcayf-Q1qNk-15" value="AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;创建 BeanDefinition 生成器&amp;nbsp;BeanDefinitionBuilder builder = BeanDefinitionBuilder.genericBeanDefinition()&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;对 builder 的子类 (AbstractBeanDefinition) 设置，如果需要设置的话，比如：bena 父类名称， bean 的具体类， bean 类名等；&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;doParse(element, parserContext, builder) 填充 beanDefinition 属性：&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;fontColor=#000000;rounded=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-16776.54" y="5025.62" width="1455" height="300" as="geometry" />
        </mxCell>
        <mxCell id="-McDBByZdcgpEU9wJOO_-75" value="设置解析方式:&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;ol style=&quot;font-size: 25px;&quot;&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;this.validationMode = 1 表示应自动检测验证模式&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;li style=&quot;font-size: 25px;&quot;&gt;this.namespaceAware&lt;b style=&quot;font-size: 25px;&quot;&gt;&amp;nbsp;&lt;/b&gt;= false&lt;br style=&quot;font-size: 25px;&quot;&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;align=left;fillColor=#00CCCC;strokeColor=#00CCCC;rounded=0;fontSize=25;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-6334.04" y="935.6199999999999" width="700" height="170" as="geometry" />
        </mxCell>
        <mxCell id="8aI2bJ5IGFcjeBgnvbSx-51" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fontSize=25;strokeWidth=5;exitX=0;exitY=0.5;exitDx=0;exitDy=0;" parent="WIyWlLk6GJQsqaUBKTNV-1" source="-McDBByZdcgpEU9wJOO_-8" target="-McDBByZdcgpEU9wJOO_-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ZeKIb3R78Dg6MLLJOp1T-23" value="" style="endArrow=classic;html=1;rounded=0;fontSize=25;fontColor=#000000;strokeWidth=5;" parent="WIyWlLk6GJQsqaUBKTNV-1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-17640" y="3360" as="sourcePoint" />
            <mxPoint x="-15650" y="3360" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ZeKIb3R78Dg6MLLJOp1T-24" value="以下部分是自定义 XML 标签元素的解析过程" style="edgeLabel;resizable=0;html=1;align=center;verticalAlign=middle;fontSize=37;fontColor=#000000;strokeWidth=8;" parent="ZeKIb3R78Dg6MLLJOp1T-23" connectable="0" vertex="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="ZeKIb3R78Dg6MLLJOp1T-25" value="注意说明：图中每个模块字体颜色的处理逻辑对应与字体颜色相同的模块，模块与模块之间颜色相同表明是程序执行的流程&lt;br style=&quot;font-size: 74px;&quot;&gt;模块下面没有分支表明程序结束。模块方法执行返回值参考源码看" style="text;html=1;strokeColor=#B20000;fillColor=#e51400;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=74;fontColor=#ffffff;" parent="WIyWlLk6GJQsqaUBKTNV-1" vertex="1">
          <mxGeometry x="-3350" y="-2050" width="4260" height="448" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-12" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#FF0000;strokeWidth=5;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-0" target="t0Rb5IohVzh9Mymz01Zp-11">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-14" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#F19C99;strokeWidth=5;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-0" target="t0Rb5IohVzh9Mymz01Zp-13">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-22" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#FFFF00;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-0" target="t0Rb5IohVzh9Mymz01Zp-21">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-30" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#0000FF;strokeWidth=5;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-0" target="t0Rb5IohVzh9Mymz01Zp-29">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-41" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#000000;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-0" target="t0Rb5IohVzh9Mymz01Zp-40">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-0" value="prepareBeanFactory(beanFactory)&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;font color=&quot;#ff0000&quot;&gt;getClassLoader() 熟不熟悉，就是最开始 supper(parent) 时设置的，在这里进行获取&lt;/font&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;beanFactory.setBeanClassLoader(getClassLoader()) 设置资源加载器，&lt;/li&gt;&lt;li&gt;&lt;font color=&quot;#f19c99&quot;&gt;beanFactory.setBeanExpressionResolver(new StandardBeanExpressionResolver(beanFactory.getBeanClassLoader())); 设置 beanFactory 表达式的语言处理器&lt;/font&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font color=&quot;#ff00ff&quot;&gt;beanFactory.addPropertyEditorRegistrar(new ResourceEditorRegistrar(this, getEnvironment()))&amp;nbsp;为 beanFactory 增加一个默认的 PropertyEditorRegistrar, 这个主要是针对 bean 属性等设置管理的一个工具类，可以自定义扩展类实现 beanFactory 的解析: 比如解析 地址：xxx_xxx_xx 定义相应的规则实现解析&amp;nbsp;这个解析方法是 registerCustomEditors, 可以重写实现我自己的解析方法&lt;/font&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font color=&quot;#0000ff&quot;&gt;beanFactory.addBeanPostProcessor(new ApplicationContextAwareProcessor(this)) 添加 bean 实例化后的后置处理器(我们可以自己创建一个 Aware 类实现 BeanPostProcessor 接口，可以实现对(这样的需求很少))某些 Aware 的注入&lt;/font&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;忽略一些接口的注入，这是因为这些接口在实现 BenaPostProcessor 的 Aware 接口中已经设置过了, 不需要重复注入&lt;/li&gt;&lt;li&gt;设置几个自动装配的特殊规则，当在进行 ioc 初始化的如果有多个实现，那么就使用指定的对象进行注入比如注入对象的时候，根据类型注入。比如 BeanFactory 接口就有多个实现，我们通过beanFactory.registerResolvableDependency(BeanFactory.class, beanFactory); 可以指定具体的实现对象&lt;/li&gt;&lt;li&gt;添加 bean 实例化后的后置处理器&amp;nbsp;beanFactory.addBeanPostProcessor(new ApplicationListenerDetector(this))&lt;br&gt;&lt;/li&gt;&lt;li&gt;&amp;nbsp;添加对 aspectJ 的支持。aspectJ 提供了两种织入(AOP)方式，第一种是通过特殊编译器，将 aspectJ 语言编写的切面类织入到 Java 中，第二种就是类加载器织入，就是下面这段代码 ：如果 beanFactory 中包含了&amp;nbsp;loadTimeWeaver，则添加new LoadTimeWeaverAwareProcessor(beanFactory)&lt;/li&gt;&lt;li&gt;将 默认的系统环境添加到一级缓存中 environment、systemProperties、systemEnvironment&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#d5e8d4;strokeColor=#82b366;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="-1112.65" y="370" width="1915.31" height="550" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-8" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#FFFF00;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-3" target="t0Rb5IohVzh9Mymz01Zp-7">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-3" value="AbstractApplicationContext()&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;font color=&quot;#ffff00&quot;&gt;this.resourcePatternResolver = getResourcePatternResolver()&lt;/font&gt;&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#CC00CC;strokeColor=#CC00CC;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="5160" y="-922.5" width="750" height="155" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-5" value="DefaultResourceLoader&lt;br&gt;&lt;ol&gt;&lt;li&gt;ClassLoader classLoader&lt;br&gt;&lt;/li&gt;&lt;li&gt;private final Set&amp;lt;ProtocolResolver&amp;gt; protocolResolvers = new LinkedHashSet&amp;lt;&amp;gt;(4)&lt;br&gt;&lt;/li&gt;&lt;li&gt;private final Map&amp;lt;Class&amp;lt;?&amp;gt;, Map&amp;lt;Resource, ?&amp;gt;&amp;gt; resourceCaches = new ConcurrentHashMap&amp;lt;&amp;gt;(4)&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font color=&quot;#ff0000&quot;&gt;在构造函数中 this.classLoader = ClassUtils.getDefaultClassLoader()&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#d5e8d4;strokeColor=#82b366;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="5160" y="-1360" width="1190" height="220" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-10" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#FF0000;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-7" target="t0Rb5IohVzh9Mymz01Zp-9">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-7" value="AbstractApplicationContext -&amp;gt; ResourcePatternResolver getResourcePatternResolver()&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;font color=&quot;#ff0000&quot;&gt;return new PathMatchingResourcePatternResolver(this)&lt;/font&gt;&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="6050" y="-912.5" width="980" height="135" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-9" value="PathMatchingResourcePatternResolver&lt;br&gt;&lt;ol&gt;&lt;li&gt;this.resourceLoader = resourceLoader;&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FF0000;strokeColor=#FF0000;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="7100" y="-932.5" width="600" height="175" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-11" value="ClassLoader getClassLoader()&lt;br&gt;&lt;ol&gt;&lt;li&gt;return (this.classLoader != null ? this.classLoader : ClassUtils.getDefaultClassLoader())&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FF0000;strokeColor=#82b366;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1070" y="23.800000000000026" width="1040" height="127.81" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-16" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#FF0000;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-13" target="t0Rb5IohVzh9Mymz01Zp-15">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-39" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;fontSize=25;fontColor=#00FFFF;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-13" target="t0Rb5IohVzh9Mymz01Zp-37">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-13" value="StandardBeanExpressionResolver(@Nullable ClassLoader beanClassLoader)：&lt;br&gt;&lt;ol&gt;&lt;li&gt;来看下这类的属性&lt;/li&gt;&lt;ol&gt;&lt;li&gt;public static final String DEFAULT_EXPRESSION_PREFIX = &quot;#{&quot;;&lt;br&gt;&lt;/li&gt;&lt;li&gt;public static final String DEFAULT_EXPRESSION_SUFFIX = &quot;}&quot;;&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;font color=&quot;#ff00ff&quot;&gt;this.expressionParser = new SpelExpressionParser(new SpelParserConfiguration(null, beanClassLoader))&lt;/font&gt;&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#F19C99;strokeColor=#82b366;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1070" y="201.9" width="1390" height="224.66" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-18" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#FFFF00;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-15" target="t0Rb5IohVzh9Mymz01Zp-17">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-24" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#FF00FF;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-15" target="t0Rb5IohVzh9Mymz01Zp-19">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-15" value="SpelParserConfiguration(@Nullable SpelCompilerMode compilerMode, @Nullable ClassLoader compilerClassLoader)&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;font color=&quot;#ffff00&quot;&gt;this(compilerMode, compilerClassLoader, false, false, Integer.MAX_VALUE)调用自己的构造函数赋值&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FF0000;strokeColor=#82b366;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="2581" y="250.17000000000002" width="1339" height="128.12" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-17" value="&lt;div&gt;SpelParserConfiguration(@Nullable SpelCompilerMode compilerMode, @Nullable ClassLoader compilerClassLoader,&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;&quot;&gt;			&lt;/span&gt;boolean autoGrowNullReferences, boolean autoGrowCollections, int maximumAutoGrowSize)&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;this.compilerMode = (compilerMode != null ? compilerMode : defaultCompilerMode); 编译器模式 OFF 关闭，在 static 中处理赋值&lt;br&gt;&lt;/li&gt;&lt;li&gt;this.compilerClassLoader = compilerClassLoader;&lt;br&gt;&lt;/li&gt;&lt;li&gt;this.autoGrowNullReferences = autoGrowNullReferences&lt;br&gt;&lt;/li&gt;&lt;li&gt;this.autoGrowCollections = autoGrowCollections&lt;br&gt;&lt;/li&gt;&lt;li&gt;this.maximumAutoGrowSize = maximumAutoGrowSize&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="4020" y="171.73000000000002" width="1480" height="285" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-19" value="SpelExpressionParser(SpelParserConfiguration configuration)&lt;br&gt;&lt;ol&gt;&lt;li&gt;this.configuration = configuration&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FF00FF;strokeColor=#82b366;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="2871.75" y="11.899999999999999" width="757.5" height="125.62" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-26" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#FF00FF;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-21" target="t0Rb5IohVzh9Mymz01Zp-25">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-21" value="ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver) 创建编辑器的时候付初始值&amp;nbsp;&lt;br&gt;&lt;ol&gt;&lt;li&gt;this.resourceLoader = resourceLoader;&lt;br&gt;&lt;/li&gt;&lt;li&gt;this.propertyResolver = propertyResolver&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;在&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;在 ResourceEditorRegistrar 类中实现了接口类 PropertyEditorRegistrar 的registerCustomEditors(PropertyEditorRegistry registry) 方法完成&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;bean 的解析。所以我们可以创建一个自己的资源编辑器并实现这个接口来完成自定义bean的解析，&lt;/span&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FF00FF;strokeColor=#FF00FF;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1070" y="715.77" width="1700" height="246.88" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-25" value="addPropertyEditorRegistrar(PropertyEditorRegistrar registrar)&lt;br&gt;&lt;ol&gt;&lt;li&gt;this.propertyEditorRegistrars.add(registrar); 将编辑器添加到&amp;nbsp;自定义 PropertyEditor 注册器以应用于此工厂的 bean 的集合中&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="2880" y="754.4499999999999" width="1040" height="169.53" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-32" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#000000;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-29" target="t0Rb5IohVzh9Mymz01Zp-31">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-29" value="&lt;font color=&quot;#ff0000&quot;&gt;ApplicationContextAwareProcessor(ConfigurableApplicationContext applicationContext)&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;font color=&quot;#ff0000&quot;&gt;this.applicationContext = applicationContext;&lt;br&gt;&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font color=&quot;#ff0000&quot;&gt;this.embeddedValueResolver = new EmbeddedValueResolver(applicationContext.getBeanFactory());&lt;br&gt;&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/font&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#0000FF;strokeColor=#82b366;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1070" y="1117.52" width="1210" height="198.74" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-34" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#FFFF00;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-31" target="t0Rb5IohVzh9Mymz01Zp-33">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-36" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#00FFFF;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-31" target="t0Rb5IohVzh9Mymz01Zp-35">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-31" value="EmbeddedValueResolver(ConfigurableBeanFactory beanFactory)&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;font color=&quot;#ffff00&quot;&gt;this.exprContext = new BeanExpressionContext(beanFactory, null);&amp;nbsp;用于评估 bean 定义中的表达式的上下文对象。&lt;/font&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;font color=&quot;#00ffff&quot;&gt;this.exprResolver = beanFactory.getBeanExpressionResolver();&lt;/font&gt;&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FF0000;strokeColor=#82b366;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="2370" y="1117.52" width="1040" height="195.55" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-33" value="BeanExpressionContext(ConfigurableBeanFactory beanFactory, @Nullable Scope scope)&lt;br&gt;&lt;ol&gt;&lt;li&gt;this.beanFactory = beanFactory;&lt;br&gt;&lt;/li&gt;&lt;li&gt;this.scope = scope&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="3540" y="1028.7800000000002" width="1060" height="148.74" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-35" value="BeanExpressionResolver getBeanExpressionResolver()&lt;br&gt;&lt;ol&gt;&lt;li&gt;return this.beanExpressionResolver&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#00FFFF;strokeColor=#00FFFF;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="3540" y="1221.9" width="870" height="124.37" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-37" value="public void setBeanExpressionResolver(@Nullable BeanExpressionResolver resolver)&lt;br&gt;&lt;ol&gt;&lt;li&gt;this.beanExpressionResolver = resolver;&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#F19C99;strokeColor=#82b366;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="1250" y="501.9" width="1030" height="140" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-43" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#000000;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-40" target="t0Rb5IohVzh9Mymz01Zp-42">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-40" value="postProcessBeanFactory(beanFactory)：&lt;span style=&quot;background-color: initial;&quot;&gt;子类覆盖方法做额外的处理，此处一般不做任何扩展工作，在 Spring MVC 中有相关的操作&lt;/span&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#d5e8d4;strokeColor=#82b366;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="-686.26" y="1070" width="1062.51" height="100" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-45" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#000000;strokeWidth=5;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-42" target="t0Rb5IohVzh9Mymz01Zp-44">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-42" value="invokeBeanFactoryPostProcessors(beanFactory)：调用各种 beanFactory 处理器&lt;br&gt;&lt;ol style=&quot;color: rgb(0, 0, 255);&quot;&gt;&lt;li&gt;&lt;font color=&quot;#0000ff&quot;&gt;PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(beanFactory, getBeanFactoryPostProcessors())&lt;br&gt;&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#d5e8d4;strokeColor=#82b366;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="-854.69" y="1674.99" width="1399.37" height="225.63" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-47" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=25;fontColor=#FFFF00;strokeWidth=5;" edge="1" parent="WIyWlLk6GJQsqaUBKTNV-1" source="t0Rb5IohVzh9Mymz01Zp-44" target="t0Rb5IohVzh9Mymz01Zp-46">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-44" value="&lt;font color=&quot;#ffff00&quot;&gt;getBeanFactoryPostProcessors():&amp;nbsp; 获取已经注册的&amp;nbsp;beanFactoryPostProcessor，我们可以通过重写前面提到过的 customizeBeanFactory()&amp;nbsp; 方法将我们自己实现&lt;/font&gt;&lt;span style=&quot;color: rgb(255, 255, 0);&quot;&gt;BeanFactoryPostProcessors的类添加到&lt;/span&gt;&lt;font color=&quot;#ffff00&quot;&gt;beanFactoryPostProcessors集合中&lt;/font&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#0000FF;strokeColor=#82b366;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="660" y="1510" width="1120" height="170" as="geometry" />
        </mxCell>
        <mxCell id="t0Rb5IohVzh9Mymz01Zp-46" value="&lt;font color=&quot;#0000ff&quot;&gt;invokeBeanFactoryPostProcessors(beanFactory, getBeanFactoryPostProcessors())&lt;/font&gt;&lt;br&gt;&lt;ol style=&quot;&quot;&gt;&lt;li style=&quot;&quot;&gt;&lt;font color=&quot;#0000ff&quot;&gt;if (beanFactory instanceof BeanDefinitionRegistry) 将&amp;nbsp;&lt;/font&gt;beanFactoryPostProcessors 分类：List&amp;lt;BeanFactoryPostProcessor&amp;gt; regularPostProcessors = new ArrayList&amp;lt;&amp;gt;();&amp;nbsp;List&amp;lt;BeanDefinitionRegistryPostProcessor&amp;gt; registryProcessors = new ArrayList&amp;lt;&amp;gt;(); 并执行对应的处理器方法&lt;/li&gt;&lt;li style=&quot;&quot;&gt;根据类型&amp;nbsp;BeanDefinitionRegistryPostProcessor 获取接口类，用户通过重写 customizeBeanFactory 手动添加&amp;nbsp;&lt;/li&gt;&lt;li&gt;String[] postProcessorNames =&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;&quot;&gt;					&lt;/span&gt;beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, true, false); 并执行对应的处理方法&lt;/li&gt;&lt;li style=&quot;&quot;&gt;再次根据类型&amp;nbsp;postProcessorNames = beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, true, false); 这是因为 4 中执行对应的处理器方法可能会再次注册实现 BeanDefinitionRegistryPostProcessor 的接口类；&lt;/li&gt;&lt;li style=&quot;&quot;&gt;循环获取实现BeanDefinitionRegistryPostProcessor 接口类；&amp;nbsp; while (reiterate){.&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;postProcessorNames = beanFactory.getBeanNamesForType(BeanDefinitionRegistryPostProcessor.class, true, false);},执行对应处理器的方法；&lt;/li&gt;&lt;li style=&quot;&quot;&gt;执行上述代码中放入 registryProcessors、regularPostProcessors 集合中的接口类的 postProcessBeanFactory；invokeBeanFactoryPostProcessors(registryProcessors, beanFactory);&amp;nbsp;invokeBeanFactoryPostProcessors(regularPostProcessors, beanFactory);&lt;/li&gt;&lt;li style=&quot;&quot;&gt;如果 beanFactoryPostProcessors 集合没有实现 BeanDefinitionRegistryPostProcessor 接口；那么调用&amp;nbsp;invokeBeanFactoryPostProcessors(beanFactoryPostProcessors, beanFactory);完成 postProcessBeanFactory 方法调用&lt;/li&gt;&lt;li style=&quot;&quot;&gt;接着还需要处理 Spring 根据类型获取实现 beanFactoryPostProcessor 接口的类，突然根据接口类判断是否实现了 PriorityOrdered 或者 Ordered 接口，或者都没有实现，分成三个逻辑处理：&lt;/li&gt;&lt;ol&gt;&lt;li style=&quot;&quot;&gt;List&amp;lt;BeanFactoryPostProcessor&amp;gt; priorityOrderedPostProcessors = new ArrayList&amp;lt;&amp;gt;();invokeBeanFactoryPostProcessors(priorityOrderedPostProcessors, beanFactory);&amp;nbsp; &amp;nbsp;&lt;/li&gt;&lt;li style=&quot;&quot;&gt;&amp;nbsp;List&amp;lt;String&amp;gt; orderedPostProcessorNames = new ArrayList&amp;lt;&amp;gt;(); invokeBeanFactoryPostProcessors(orderedPostProcessors, beanFactory);&lt;/li&gt;&lt;li style=&quot;&quot;&gt;List&amp;lt;String&amp;gt; nonOrderedPostProcessorNames = new ArrayList&amp;lt;&amp;gt;()；&amp;nbsp;invokeBeanFactoryPostProcessors(nonOrderedPostProcessors, beanFactory);&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;" style="whiteSpace=wrap;html=1;fontSize=25;align=left;fillColor=#FFFF00;strokeColor=#FFFF00;rounded=0;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="650" y="1754" width="1530" height="876" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
